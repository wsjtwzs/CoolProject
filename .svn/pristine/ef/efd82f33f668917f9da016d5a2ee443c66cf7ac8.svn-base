//
//  ProductViewController.m
//  CoolProject
//
//  Created by 魔时网 on 14-6-4.
//  Copyright (c) 2014年 mosh. All rights reserved.
//

#import "ProductViewController.h"
#import "ProductCell.h"
#import "HTTPClient+ProductClient.h"

@interface ProductViewController ()
{
    UIView *_titleView;
    UITableView *_listView;
    NSArray *_listArray;
}
@end

@implementation ProductViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.sModel = SegmentModel_product;
    self.cellHeight = 160.0f;
    self.navigationItem.titleView = [self createTitleView];
    [self addEGORefreshOnTableView:self.baseTableView];
    [self createListView];
    [self downloadData];
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - createView -
- (UIView *) createTitleView
{
    _titleView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 120, 35)];
    _titleView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"seg_1"]];
    NSArray *array = @[@[@"配货",@"seg_1"],
                       @[@"货单",@"seg_2"]];
    for (int i = 0 ;i < array.count; i++) {
        UIButton *button = [GlobalConfig createButtonWithFrame:CGRectMake(i * CGRectGetWidth(_titleView.frame)/2,0 ,CGRectGetWidth(_titleView.frame)/2, CGRectGetHeight(_titleView.frame)) ImageName:nil Title:[array[i] firstObject] Target:self Action:@selector(segmentValueChange:)];
        [button setTitleColor:BLACKCOLOR forState:UIControlStateNormal];
        button.tag = i;
        [_titleView addSubview:button];
    }
    
    return _titleView;
}

- (void) createListView
{
    _listView = [[UITableView alloc] initWithFrame:self.baseTableView.frame style:UITableViewStylePlain];
    _listView.delegate = self;
    [self.view addSubview:_listView];
    
}
#pragma mark - selfAction -
- (void) downloadData
{
    self.loadingView.hidden = NO;
    
    switch (self.sModel) {
        case SegmentModel_product:
            
        {[[HTTPClient shareHTTPClient] getProdectListSuccess:^(id jsonData) {
                self.dataArray = jsonData;
                [self.baseTableView reloadData];
                self.loadingView.hidden = YES;
                
            } fail:^{
                self.loadingView.hidden = YES;
            }];
        }
            break;
        case SegmentModel_list:
            
        { [[HTTPClient shareHTTPClient] getProdectListSuccess:^(id jsonData) {
                _listArray = jsonData;
                [_listView reloadData];
                self.loadingView.hidden = YES;
                
            } fail:^{
                self.loadingView.hidden = YES;
            }];
        }
            break;
        default:
            break;
    }
    
}

- (void) segmentValueChange:(id)sender
{
    UIButton *button = (UIButton *)sender;
    switch (button.tag) {
        case 0:
            _titleView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"seg_1"]];
            self.sModel = SegmentModel_product;
            [self showProductView];
            break;
            case 1:
            _titleView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"seg_2"]];
            self.sModel = SegmentModel_list;
            [self showListView];
        default:
            break;
    }
}

- (void) showProductView
{
    _listView.hidden = YES;
    self.baseTableView.hidden = NO;
}

- (void) showListView
{
    _listView.hidden = NO;
    self.baseTableView.hidden = YES;

}

#pragma mark - tableViewDelegate -

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    switch (self.sModel) {
        case SegmentModel_product:
        {
            static NSString *cellID = @"productCell";
            ProductCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
            
            if (!cell) {
                cell = [[[NSBundle mainBundle] loadNibNamed:NSStringFromClass([ProductCell class]) owner:self options:nil] objectAtIndex:0];
                cell.delegate = self;
            }
            return cell;
        }
            break;
        case SegmentModel_list:
        {
            
        }
            
        default:
            break;
    }
    return nil;
}


#pragma mark - productCellDelegate -

- (void) listSelected:(ProductCell *)cell
{

}

- (void) transferSelected:(ProductCell *)cell
{
[self.navigationController pushViewController:[Controllers transferViewController] animated:YES];
}

- (void) locationSelected:(ProductCell *)cell
{
    [self.navigationController pushViewController:[Controllers locationViewController] animated:YES];
}
@end
